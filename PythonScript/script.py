import random
from faker import Faker
fake = Faker()

print("\nAmusement Park - Data Generator\n\nChoose business climate:")
print("1. Positive business climate (high prices and attendance, abundant sales and transactions)")
print("2. Negative business climate (low prices and attendance, few sales and transactions)")
print("Please specify the option by entering the number (e.g. 1): ")

input1 = int(input())

if input1 == 1:
    print("\n**Query to increase the ticket prices:**")
    print("UPDATE tickets\nSET PRICE = PRICE * 1.2\nWHERE STATUS LIKE 'available';")

    print("\n**Query to increase the products' prices:**")
    print("UPDATE products\nSET PRICE = PRICE * 1.2;")

    print("\n**Queries to increase attractions usage:**")
    limit = random.randint(100, 300)
    print("DECLARE max INTEGER DEFAULT " + limit.__str__() + ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tINSERT INTO ATTRACTION_USAGE (TICKET_ID, ATTRACTION_ID, DURATION)")
    print("\t\tSELECT")
    print("\t\t(SELECT ID FROM TICKETS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM ATTRACTIONS ORDER BY RANDOM() LIMIT 1),")
    print("\t\tUNIFORM(1, 60, RANDOM());")
    print("\tEND FOR;")
    print("END;")

    print("\n**Queries to increase sales:**")
    limit = random.randint(100, 300)
    print("DECLARE max INTEGER DEFAULT " + limit.__str__() + ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tINSERT INTO SALES (PRODUCT_ID, VISITOR_ID, EMPLOYEE_ID, QUANTITY, SALE_DATE, PROMOTION_ID)")
    print("\t\tSELECT")
    print("\t\t(SELECT ID FROM PRODUCTS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM VISITORS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM EMPLOYEES ORDER BY RANDOM() LIMIT 1),")
    print("\t\tUNIFORM(1, 10, RANDOM()), CURRENT_TIMESTAMP,")
    print("\t\t(SELECT ID FROM PROMOTIONS ORDER BY RANDOM() LIMIT 1);")
    print("\tEND FOR;")
    print("END;")

    print("\n**Queries to generate many transactions from sales:**")
    limit = random.randint(100, 300)
    print("DECLARE")
    print("\tsale_id INTEGER DEFAULT 0;")
    print("\tproduct_price NUMBER(10, 2) DEFAULT 0.00;")
    print("\tmax INTEGER DEFAULT " + limit.__str__()+ ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tSELECT id INTO sale_id FROM sales ORDER BY RANDOM() LIMIT 1;")
    print("\t\tSELECT p.price")
    print("\t\tINTO product_price")
    print("\t\tFROM products p")
    print("\t\tJOIN sales s ON p.id = s.product_id")
    print("\t\tWHERE s.id = sale_id;")
    print("\t\tINSERT INTO TRANSACTIONS(reason, type, amount, date, sale_id)")
    print("\t\tSELECT")
    print("\t\t'Item is sold', 'Sale', product_price * (SELECT QUANTITY FROM SALES WHERE id = sale_id),")
    print("\t\tCURRENT_TIMESTAMP, sale_id;")
    print("\tEND FOR;")
    print("END;")

else:
    print("\n**Query to decrease the ticket prices:**")
    print("UPDATE tickets\nSET PRICE = PRICE * 0.8\nWHERE STATUS LIKE 'available';")
    print("\n**Query to decrease the products' prices:**")
    print("UPDATE products\nSET PRICE = PRICE * 0.8;")
    print("\n**Queries to increase attractions usage:**")
    limit = random.randint(1, 20)
    print("DECLARE max INTEGER DEFAULT " + limit.__str__() + ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tINSERT INTO ATTRACTION_USAGE (TICKET_ID, ATTRACTION_ID, DURATION)")
    print("\t\tSELECT")
    print("\t\t(SELECT ID FROM TICKETS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM ATTRACTIONS ORDER BY RANDOM() LIMIT 1),")
    print("\t\tUNIFORM(1, 60, RANDOM());")
    print("\tEND FOR;")
    print("END;")
    print("\n**Queries to increase sales:**")
    limit = random.randint(1, 10)
    print("DECLARE max INTEGER DEFAULT " + limit.__str__() + ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tINSERT INTO SALES (PRODUCT_ID, VISITOR_ID, EMPLOYEE_ID, QUANTITY, SALE_DATE, PROMOTION_ID)")
    print("\t\tSELECT")
    print("\t\t(SELECT ID FROM PRODUCTS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM VISITORS ORDER BY RANDOM() LIMIT 1),")
    print("\t\t(SELECT ID FROM EMPLOYEES ORDER BY RANDOM() LIMIT 1),")
    print("\t\tUNIFORM(1, 10, RANDOM()), CURRENT_TIMESTAMP,")
    print("\t\t(SELECT ID FROM PROMOTIONS ORDER BY RANDOM() LIMIT 1);")
    print("\tEND FOR;")
    print("END;")
    print("\n**Queries to generate few transactions from sales:**")
    limit = random.randint(1, 10)
    print("DECLARE")
    print("\tsale_id INTEGER DEFAULT 0;")
    print("\tproduct_price NUMBER(10, 2) DEFAULT 0.00;")
    print("\tmax INTEGER DEFAULT " + limit.__str__() + ";")
    print("BEGIN")
    print("\tFOR i IN 1 TO max DO")
    print("\t\tSELECT id INTO sale_id FROM sales ORDER BY RANDOM() LIMIT 1;")
    print("\t\tSELECT p.price")
    print("\t\tINTO product_price")
    print("\t\tFROM products p")
    print("\t\tJOIN sales s ON p.id = s.product_id")
    print("\t\tWHERE s.id = sale_id;")
    print("\t\tINSERT INTO TRANSACTIONS(reason, type, amount, date, sale_id)")
    print("\t\tSELECT")
    print("\t\t'Item is sold', 'Sale', product_price * (SELECT QUANTITY FROM SALES WHERE id = sale_id),")
    print("\t\tCURRENT_TIMESTAMP, sale_id;")

    print("\tEND FOR;")
    print("END;")
